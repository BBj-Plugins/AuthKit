use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::AuthKit/profile/GoogleAccountProfile.bbj::GoogleAccountProfile
use ::AuthKit/profile/AccountProfile.bbj::AccountProfile

use com.google.api.client.googleapis.auth.oauth2.GoogleIdToken
use com.google.api.client.json.jackson2.JacksonFactory

class public GoogleLoginWidget extends BBjWidget

    field private BBjHtmlView HtmlView!
    field private GoogleAccountProfile Profile!
    
    field public static BBjNumber ON_LOGIN = 6777
    
    field public static BBjString CLIENTID$ = ""
    
    

    method public GoogleLoginWidget(BBjWindow wnd!,BBjInt id!)
        #super!.create(wnd!,id!)
    methodend

    method public GoogleLoginWidget(BBjWindow wnd!, BBjInt id!, BBjInt x!, BBjInt y!, BBjInt w!, BBjInt h!)
        #super!.create(wnd!,id!,x!, y!, w!, h!)
    methodend

    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        
        wnd! = #getCanvas()
        
        if f_init!>0 then
        
            ch=unt
            open (ch)"AuthKit/lib/svg/google.svg"
            read record (ch,siz=dec(fin(ch)(1,4)))svg$
            close (ch)

            html$ = "<html><body>
:           <div style='width:"+str(#W!-10)+"px; height:"+str(#H!-8)+"px;' id='myGoogleP'>"+svg$+"</div>
:           <button style='width:1px; height:1px;display:none;' id='logout' onClick='gapi.auth2.getAuthInstance().disconnect();'>logout</button>
:           </body></html>"


            html! = wnd!.addHtmlView(100,0,0,#W!,#H!,"")
            html!.setNoEdge(1)
            html!.setCallback(BBjAPI.ON_NATIVE_JAVASCRIPT,#this!,"onJs")
            html!.setCallback(BBjAPI.ON_PAGE_LOADED,#this!,"onPageLoaded")
            html!.setText(html$)
            #HtmlView! = CAST(BBjHtmlView,html!)
        FI
        
    methodend

    method public void onJs( BBjNativeJavaScriptEvent ev! )
          buffer! = ev!.getEventMap() 
          token$=buffer!.get("token")
          token! = GoogleIdToken.parse(new JacksonFactory(), token$)
          payload! = token!.getPayload()
          #Profile! = new GoogleAccountProfile(payload!)
          #super!.fireEvent(GoogleLoginWidget.ON_LOGIN,#Profile!)
    methodend
    
    method public void onPageLoaded ( BBjPageLoadedEvent ev! )
         #HtmlView!.clearCallback(BBjAPI.ON_PAGE_LOADED)
         #HtmlView!.setCallback(BBjAPI.ON_PAGE_LOADED,#this!,"onPageLoaded2")

            bui = info(3,6)>"4"
            doc$ = iff(bui,"$doc","document")
            wnd$ = iff(bui,"$wnd","window")
            #HtmlView!.executeScript("var script = "+doc$+".createElement('script');
:           script.type = 'text/javascript';
:           script.src = 'https://apis.google.com/js/api:client.js';
:           "+doc$+".head.appendChild(script)")            
         wait .2
    
    methodend
    
    method public void onPageLoaded2 ( BBjPageLoadedEvent ev! )         
         
         bui = info(3,6)>"4"
         doc$ = iff(bui,"$doc","document")
         wnd$ = iff(bui,"$wnd","window")

        
        #HtmlView!.injectScript(scr$,1)

scr$="  var googleUser = {};
:  var startApp = function() {
:    gapi.load('auth2', function(){
:      auth2 = gapi.auth2.init({
:        client_id: '"+#CLIENTID$+"',
:        cookiepolicy: 'single_host_origin',
:      });
:      attachSignin(document.getElementById('myGoogleP'));
:    });
:  };
:
:  function attachSignin(element) {
:    console.log(element.id);
:    auth2.attachClickHandler(element, {},
:        function(googleUser) {
:            var profile = googleUser.getBasicProfile();
:            var name=profile.getName();
:            var email=profile.getEmail();
:            var token = googleUser.getAuthResponse().id_token;
:            var custom=new CustomEvent('custom_event',{bubbles:true,cancelable:true});
:            custom.myElement='jsfunction'; custom.profileName = name;
:            custom.email=email; custom.token = token;
:            var element=document.getElementById('myGoogleP');
:            window.basisDispatchCustomEvent(element,custom);
:        }, function(error) {
:          console.log(JSON.stringify(error, undefined, 2));
:        });
:  }"
    #HtmlView!.injectScript(scr$,1)
    

         #HtmlView!.clearCallback(BBjAPI.ON_PAGE_LOADED)
         #HtmlView!.executeScript("startApp();")
    methodend
    
    method public AccountProfile getProfile()
        methodret #Profile!
    methodend
    
    method public void logout()
            #HtmlView!.executeScript("gapi.auth2.getAuthInstance().disconnect();")
            #HtmlView!.executeScript("$doc.getElementById('logout').click();")
            #Profile! = null()
    methodend
    
classend